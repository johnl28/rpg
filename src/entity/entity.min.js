class Entity{virtualID=0;animationSpeed=.15;scale=1;type="OBJECT";container=null;collisionBoxes=[];rootSprite=null;constructor(t,e){let i=this.container=new PIXI.Container;this.container.sortableChildren=!0,i.visible=!1,e.addChild(i),this.virtualID=t}Destroy(){this.container.destroy()}Show(t=0,e=0){this.container.x=t,this.container.y=e,this.container.visible=!0,log(`Show entity VID ${this.virtualID} POS ${t}x${e} TYPE "${this.type}"`)}GetHeight(){return this.container.height}GetWidth(){return this.container.width}GetXY(){return{x:this.container.x,y:this.container.y}}SetXY(t=0,e=0){this.container.x=t,this.container.y=e,this.SetZ(e+this.container.height/1.5)}SetZ(t){this.container.zIndex=t}SetCollisionBox(t=0,e=0,i=0,s=0){let o=new PIXI.Sprite(COLLISION_DEBUG?LOADER.resources.debug.texture:null);this.collisionBoxes.push(o),this.container.addChild(o);let n=i||this.container.width;o.width=n*this.scale,o.height=(s||this.container.height)*this.scale,"center"==o.x?o.x=this.container.width/2-o.width/2:o.x=t,o.y=e,o.x*=this.scale,o.y*=this.scale}LoadCollisionData(t){log(t);for(var e=0;e<t.length;e++){var i=t[e];this.SetCollisionBox(i.x,i.y,i.width,i.height)}}SetRotation(t){this.container.rotation=t}Hide(){this.container.visible=!1}SetScale(t){this.scale=t,this.rootSprite&&this.rootSprite.scale.set(t)}SetDirection(t){this.direction!=t&&(this.container.width*=-1,this.direction=t)}SetAnimationSpeed(t){this.animationSpeed=this.rootSprite.animationSpeed=t}LoadSprite(t){let e=LOADER.resources[t].texture;if(!e)return void error(`Cannot load texture from resourceName: ${t}.`);let i=this.rootSprite;i?i.texture=e:(this.rootSprite=i=new PIXI.Sprite(e),this.container.addChild(i)),i.scale.set(this.scale)}LoadSpriteSheet(t,e){let i=LOADER.resources[t].spritesheet;if(!i)return void error(`Cannot load spritesheet from resourceName: ${t}.`);let s=i.animations[e];if(!s)return void error(`Cannot load animation ${e} from resourceName: ${t}.`);let o=this.rootSprite;o?o.textures=s:(this.rootSprite=o=new PIXI.AnimatedSprite(s),o.animationSpeed=this.animationSpeed,this.container.addChild(o)),o.scale.set(this.scale),o.play()}}class Actor extends Entity{id=0;moveDirection={x:0,y:0};direction=1;stateAnimations={};resourceName="";state="";attacking=!1;onStateComplete=null;name="ACTOR";type="ACTOR";attributes={hp:100,speed:1,damage:1,range:150};constructor(t,e,i){super(e,i),this.id=t}__updateAttackState(){}SetDirection(t){this.SetState("IDLE"),super.SetDirection(t)}SetScale(t){super.SetScale(t),this.container.pivot.x=this.container.width/2,this.container.pivot.y=this.container.height/2}IsState(t){return this.state==t}Spawn(t=0,e=0){this.SetState("IDLE"),this.Show(t,e)}GetAttr(t){return this.attributes[t]}SetAttr(t,e){this.attributes[t]=e}GetSpeed(){let t=this.IsState("RUN")?2:0;return this.attributes.speed+t}GetDamage(){let t=this.GetAttr("damage"),e=this.stateAnimations[this.state].damage;return e&&(t+=e),t}StateComplete(){this.onStateComplete&&this.onStateComplete()}SetState(t,e=!0){this.state!=t&&(this.state=t,this.rootSprite&&(this.rootSprite.loop=e),this.UpdateAnimation(),this.onStateComplete&&(this.rootSprite.onComplete=()=>this.StateComplete()))}SetIDLE(){this.moveDirection.x=0,this.moveDirection.y=0,this.SetState("IDLE")}CheckMapOverflow(){let t=this.GetXY();return t.x<50&&this.moveDirection.x<0||(t.x>gameInstance.map.width-50&&this.moveDirection.x>0||(t.y<50&&this.moveDirection.y<0||t.y>gameInstance.map.height-70&&this.moveDirection.y>0))}CheckCollision(){let t=gameInstance.map;for(let e in t.objects){let i=t.objects[e],s=i.collisionBoxes;if(!s.length)continue;let o=i.GetXY(),n=this.GetXY();for(let t in s){let e=s[t],i=o.x+e.x,r=o.y+e.y;if(checkIntersection(n.x,n.x+20,i,i+e.width+20,n.y,n.y+40,r-10,r+e.height-35)&&(1==this.moveDirection.x&&n.x<i||-1==this.moveDirection.x&&n.x>i+e.width||1==this.moveDirection.y&&n.y+45<r||-1==this.moveDirection.y&&n.y+45>r+e.height))return!0}}return!1}__updateState(){if(this.IsState("RUN")||this.IsState("MOVE")){let t=this.GetXY();if(!this.moveDirection.x&&!this.moveDirection.y)return void this.SetState("IDLE");if(this.CheckMapOverflow()||"PLAYER"==this.type&&this.CheckCollision())return;t.x+=this.GetSpeed()*this.moveDirection.x,t.y+=this.GetSpeed()*this.moveDirection.y,this.SetXY(t.x,t.y)}}Die(){this.onStateComplete=()=>{this.Destroy(),delete gameInstance.map.entities[this.virtualID]},this.SetState("DIE",!1)}Damage(t){let e=this.GetAttr("hp")-t;this.SetAttr("hp",e),e<=0?this.Die():this.attacking||(this.onStateComplete=()=>{this.IsState("HURT")&&this.SetState("IDLE")},this.SetState("HURT",!1))}Attack(t){"OBJECT"!=t.type&&t.Damage(this.GetDamage())}OnTickUpdate(t){this.__updateState()}UpdateAnimation(){const t=this.stateAnimations[this.state];t||(error(`Couldn't load the animation for state ${this.state}, actor id ${this.id}.`),this.SetIDLE()),this.LoadSpriteSheet(this.resourceName,t.animation),this.SetAnimationSpeed(t.speed)}SetAttributes(t){for(let e in t)this.SetAttr(e,t[e]);t.maxHp&&this.SetAttr("hp",t.maxHp)}}
